@using Microsoft.AspNetCore.Components
@using Microsoft.AspNetCore.Components.Forms
@using System.Security.Claims
@using HOSTEE.Services
@inject SignInManager<ApplicationUser> sinManager
@inject NavigationManager navigator
@inject AuthenticationStateProvider authStatePRovider
@inject IAuthService AuthService
@inject HttpClient http
@inject IHttpClientFactory HttpClientFactory


<div style="width: 100%; display: flex; justify-content: center">

    <div class="box-container" style="width: 320px; padding: 3px;">
        <EditForm Model="@loginModel" OnValidSubmit="HandleLogin">
            <DataAnnotationsValidator />
            <ValidationSummary />
            <div style="display: flex; justify-content: center">
                <h3>Sign In</h3>
            </div>

            <div class="c-row">
                <div class="col" style="display: flex; align-items: center; justify-content: flex-start; max-width: 200px;">
                    <label for="Email">Email:</label>
                </div>
                <div class="col">
                    <InputText id="Email" @bind-Value="loginModel.Email" />
                </div>
            </div>

            <div class="c-row">
                <div class="col" style="display: flex; align-items: center; justify-content: flex-start; max-width: 200px;">
                    <label for="Password">Password:</label>
                </div>
                <div class="col">
                    <InputText id="Password" @bind-Value="loginModel.Password" type="password" />
                </div>
            </div>

            <div class="c-row">
                <button class="btn btn-primary" style="width:50%" type="submit">Sign In</button>
                <button class="btn btn-primary" style="width:50%" @onclick=RegDirect>Register</button>
            </div>  
        </EditForm>
    </div>
</div>

@code {
    private LoginModel loginModel = new LoginModel();
    private string mes = string.Empty;

    [Parameter] public EventCallback OnSignIn { get; set; }


    private async Task HandleLogin()
    {
        try
        {
            var result = await AuthService.LoginAsync(loginModel.Email, loginModel.Password);

            if(result)
            {
                navigator.NavigateTo("/");
            }
            else
            {
                Console.WriteLine("From SignIn.razor, HandleLogin() Login failed");
            }
        }
        catch(Exception ex)
        {
            Console.WriteLine($"From SignIn.razor, HandleLogin() caugth exception: {ex.Message} + {ex}");
        }
    }

    private void RegDirect() 
    {
        navigator.NavigateTo("/register", forceLoad: true);
    }

}
